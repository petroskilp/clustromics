# path or URL to sample sheet (TSV format, columns: sample, condition, ...)
samples: config/samples.tsv
# path or URL to sequencing unit sheet (TSV format, columns: sample, unit, fq1, fq2)
# Units are technical replicates (e.g. lanes, or resequencing of the same biological
# sample).
units: config/units.tsv

options:
  qc: True
  diffexp: True
  normalization: True
  gsea: True
  ml: True


ref:
  # Ensembl species name
  species: homo_sapiens
  # Ensembl release (make sure to take one where snpeff data is available, check 'snpEff databases' output)
  release: 100
  # Genome build
  build: GRCh38

trimming:
  # If you activate trimming by setting this to `True`, you will have to
  # specify the respective cutadapt adapter trimming flag for each unit
  # in the `units.tsv` file's `adapters` column
  activate: False

pca:
  activate: True
  # Per default, a separate PCA plot is generated for each of the
  # `variables_of_interest` and the `batch_effects`, coloring according to
  # that variables groups.
  # If you want PCA plots for further columns in the samples.tsv sheet, you
  # can request them under labels as a list, for example:
  # - relatively_uninteresting_variable_X
  # - possible_batch_effect_Y
  labels: ""

heatmap:
  activate: True
  # Per default, a separate PCA plot is generated for each of the
  # `variables_of_interest` and the `batch_effects`, coloring according to
  # that variables groups.
  # If you want PCA plots for further columns in the samples.tsv sheet, you
  # can request them under labels as a list, for example:
  # - relatively_uninteresting_variable_X
  # - possible_batch_effect_Y
  labels: ""

diffexp:
  # variables for whome you are interested in whether they have an effect on
  # expression levels
  variables_of_interest:
    treatment_1:
      # any fold change will be relative to this factor level
      base_level: B
    treatment_2:
      # any fold change will be relative to this factor level
      base_level: C
  # variables whose effect you want to model to separate them from your
  # variables_of_interest
  batch_effects:
    - jointly_handled
  # contrasts for the deseq2 results method to determine fold changes
  contrasts:
    A-vs-B_treatment_1:
      # must be one of the variables_of_interest, for details see:
      # https://www.bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html#contrasts
      variable_of_interest: treatment_1
      # must be a level present in the variable_of_interest that is not the
      # base_level specified above
      level_of_interest: A
  # The default model includes all interactions among variables_of_interest
  # and batch_effects added on. For the example above this implicitly is:
  # model: ~jointly_handled + treatment_1 * treatment_2
  # For the default model to be used, simply specify an empty `model: ""` below.
  # If you want to introduce different assumptions into your model, you can
  # specify a different model to use, for example skipping the interaction:
  # model: ~jointly_handled + treatment_1 + treatment_2
  model: ""
  gsea_use_stat: False
  pval_threshold: 0.05 
  LFC_threshold: 0.5
  shrink_lfc: False


params:
  cutadapt-pe: ""
  cutadapt-se: ""
  star: ""

feature_counts:
  threads: 4
  # Specify any additional arguments.
  additional: "-s 2 -t gene -g gene_id"

gsea:
  Hallmark_gsea: 
    category: H
    subcategory: NULL
    use_gsea: True
    database: MSigDB
    id_class: ENSEMBL
  Hallmark_fisher:
    category: H
    subcategory: NULL
    use_gsea: False 
    database: MSigDB
    id_class: ENSEMBL
  MsigDB_C3:
    catecory: C3
    subcategory: "TFT:GTRD"
    use_gsea: True
    database: MSigDB
    id_class: ENSEMBl
  Reactome_GSEA:
    category: NULL
    subcategory: NULL
    use_gsea: True
    database: Reactome
    id_class: ENTREZID

ml:
  - knn
  - svc
  - lr
  - dt
  - gb
  - rf
  - mlp